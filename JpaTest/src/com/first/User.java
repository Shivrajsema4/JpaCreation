package com.first;
// Generated 31 Aug, 2017 6:35:12 PM by Hibernate Tools 5.2.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "osdashboard")
public class User implements java.io.Serializable {

	private int id;
	private String username;
	private String firstName;
	private String lastName;
	private String email;
	private Set<RunResultLog> runResultLogs = new HashSet<RunResultLog>(0);
	private Set<FileRef> fileRefs = new HashSet<FileRef>(0);
	private Set<RunResult> runResults = new HashSet<RunResult>(0);
	private Set<SampleRunResultLog> sampleRunResultLogs = new HashSet<SampleRunResultLog>(0);
	private Set<SampleRun> sampleRuns = new HashSet<SampleRun>(0);
	private Set<SampleRunLog> sampleRunLogs = new HashSet<SampleRunLog>(0);
	private Set<SampleRun> sampleRuns_1 = new HashSet<SampleRun>(0);
	private Set<BenchAnalysis> benchAnalysises = new HashSet<BenchAnalysis>(0);
	private Set<Run> runs = new HashSet<Run>(0);
	private Set<BenchAnalysisLog> benchAnalysisLogs = new HashSet<BenchAnalysisLog>(0);
	private Set<RunLog> runLogs = new HashSet<RunLog>(0);
	private Set<FileRefLog> fileRefLogs = new HashSet<FileRefLog>(0);
	private Set<BenchAnalysisLog> benchAnalysisLogs_1 = new HashSet<BenchAnalysisLog>(0);
	private Set<RunResult> runResults_1 = new HashSet<RunResult>(0);
	private Set<FileRefLog> fileRefLogs_1 = new HashSet<FileRefLog>(0);
	private Set<RunResultLog> runResultLogs_1 = new HashSet<RunResultLog>(0);
	private Set<BenchAnalysis> benchAnalysises_1 = new HashSet<BenchAnalysis>(0);
	private Set<Run> runs_1 = new HashSet<Run>(0);
	private Set<RunLog> runLogs_1 = new HashSet<RunLog>(0);
	private Set<FileRef> fileRefs_1 = new HashSet<FileRef>(0);
	private Set<SampleRunResultLog> sampleRunResultLogs_1 = new HashSet<SampleRunResultLog>(0);
	private Set<SampleRunResult> sampleRunResults = new HashSet<SampleRunResult>(0);
	private Set<SampleRunLog> sampleRunLogs_1 = new HashSet<SampleRunLog>(0);
	private Set<SampleRunResult> sampleRunResults_1 = new HashSet<SampleRunResult>(0);

	public User() {
	}

	public User(int id) {
		this.id = id;
	}

	public User(int id, String username, String firstName, String lastName, String email,
			Set<RunResultLog> runResultLogs, Set<FileRef> fileRefs, Set<RunResult> runResults,
			Set<SampleRunResultLog> sampleRunResultLogs, Set<SampleRun> sampleRuns, Set<SampleRunLog> sampleRunLogs,
			Set<SampleRun> sampleRuns_1, Set<BenchAnalysis> benchAnalysises, Set<Run> runs,
			Set<BenchAnalysisLog> benchAnalysisLogs, Set<RunLog> runLogs, Set<FileRefLog> fileRefLogs,
			Set<BenchAnalysisLog> benchAnalysisLogs_1, Set<RunResult> runResults_1, Set<FileRefLog> fileRefLogs_1,
			Set<RunResultLog> runResultLogs_1, Set<BenchAnalysis> benchAnalysises_1, Set<Run> runs_1,
			Set<RunLog> runLogs_1, Set<FileRef> fileRefs_1, Set<SampleRunResultLog> sampleRunResultLogs_1,
			Set<SampleRunResult> sampleRunResults, Set<SampleRunLog> sampleRunLogs_1,
			Set<SampleRunResult> sampleRunResults_1) {
		this.id = id;
		this.username = username;
		this.firstName = firstName;
		this.lastName = lastName;
		this.email = email;
		this.runResultLogs = runResultLogs;
		this.fileRefs = fileRefs;
		this.runResults = runResults;
		this.sampleRunResultLogs = sampleRunResultLogs;
		this.sampleRuns = sampleRuns;
		this.sampleRunLogs = sampleRunLogs;
		this.sampleRuns_1 = sampleRuns_1;
		this.benchAnalysises = benchAnalysises;
		this.runs = runs;
		this.benchAnalysisLogs = benchAnalysisLogs;
		this.runLogs = runLogs;
		this.fileRefLogs = fileRefLogs;
		this.benchAnalysisLogs_1 = benchAnalysisLogs_1;
		this.runResults_1 = runResults_1;
		this.fileRefLogs_1 = fileRefLogs_1;
		this.runResultLogs_1 = runResultLogs_1;
		this.benchAnalysises_1 = benchAnalysises_1;
		this.runs_1 = runs_1;
		this.runLogs_1 = runLogs_1;
		this.fileRefs_1 = fileRefs_1;
		this.sampleRunResultLogs_1 = sampleRunResultLogs_1;
		this.sampleRunResults = sampleRunResults;
		this.sampleRunLogs_1 = sampleRunLogs_1;
		this.sampleRunResults_1 = sampleRunResults_1;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "username", length = 45)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "first_name", length = 45)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "email", length = 200)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<RunResultLog> getRunResultLogs() {
		return this.runResultLogs;
	}

	public void setRunResultLogs(Set<RunResultLog> runResultLogs) {
		this.runResultLogs = runResultLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<FileRef> getFileRefs() {
		return this.fileRefs;
	}

	public void setFileRefs(Set<FileRef> fileRefs) {
		this.fileRefs = fileRefs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<RunResult> getRunResults() {
		return this.runResults;
	}

	public void setRunResults(Set<RunResult> runResults) {
		this.runResults = runResults;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<SampleRunResultLog> getSampleRunResultLogs() {
		return this.sampleRunResultLogs;
	}

	public void setSampleRunResultLogs(Set<SampleRunResultLog> sampleRunResultLogs) {
		this.sampleRunResultLogs = sampleRunResultLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<SampleRun> getSampleRuns() {
		return this.sampleRuns;
	}

	public void setSampleRuns(Set<SampleRun> sampleRuns) {
		this.sampleRuns = sampleRuns;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<SampleRunLog> getSampleRunLogs() {
		return this.sampleRunLogs;
	}

	public void setSampleRunLogs(Set<SampleRunLog> sampleRunLogs) {
		this.sampleRunLogs = sampleRunLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<SampleRun> getSampleRuns_1() {
		return this.sampleRuns_1;
	}

	public void setSampleRuns_1(Set<SampleRun> sampleRuns_1) {
		this.sampleRuns_1 = sampleRuns_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<BenchAnalysis> getBenchAnalysises() {
		return this.benchAnalysises;
	}

	public void setBenchAnalysises(Set<BenchAnalysis> benchAnalysises) {
		this.benchAnalysises = benchAnalysises;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Run> getRuns() {
		return this.runs;
	}

	public void setRuns(Set<Run> runs) {
		this.runs = runs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<BenchAnalysisLog> getBenchAnalysisLogs() {
		return this.benchAnalysisLogs;
	}

	public void setBenchAnalysisLogs(Set<BenchAnalysisLog> benchAnalysisLogs) {
		this.benchAnalysisLogs = benchAnalysisLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<RunLog> getRunLogs() {
		return this.runLogs;
	}

	public void setRunLogs(Set<RunLog> runLogs) {
		this.runLogs = runLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<FileRefLog> getFileRefLogs() {
		return this.fileRefLogs;
	}

	public void setFileRefLogs(Set<FileRefLog> fileRefLogs) {
		this.fileRefLogs = fileRefLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<BenchAnalysisLog> getBenchAnalysisLogs_1() {
		return this.benchAnalysisLogs_1;
	}

	public void setBenchAnalysisLogs_1(Set<BenchAnalysisLog> benchAnalysisLogs_1) {
		this.benchAnalysisLogs_1 = benchAnalysisLogs_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<RunResult> getRunResults_1() {
		return this.runResults_1;
	}

	public void setRunResults_1(Set<RunResult> runResults_1) {
		this.runResults_1 = runResults_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<FileRefLog> getFileRefLogs_1() {
		return this.fileRefLogs_1;
	}

	public void setFileRefLogs_1(Set<FileRefLog> fileRefLogs_1) {
		this.fileRefLogs_1 = fileRefLogs_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<RunResultLog> getRunResultLogs_1() {
		return this.runResultLogs_1;
	}

	public void setRunResultLogs_1(Set<RunResultLog> runResultLogs_1) {
		this.runResultLogs_1 = runResultLogs_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<BenchAnalysis> getBenchAnalysises_1() {
		return this.benchAnalysises_1;
	}

	public void setBenchAnalysises_1(Set<BenchAnalysis> benchAnalysises_1) {
		this.benchAnalysises_1 = benchAnalysises_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Run> getRuns_1() {
		return this.runs_1;
	}

	public void setRuns_1(Set<Run> runs_1) {
		this.runs_1 = runs_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<RunLog> getRunLogs_1() {
		return this.runLogs_1;
	}

	public void setRunLogs_1(Set<RunLog> runLogs_1) {
		this.runLogs_1 = runLogs_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<FileRef> getFileRefs_1() {
		return this.fileRefs_1;
	}

	public void setFileRefs_1(Set<FileRef> fileRefs_1) {
		this.fileRefs_1 = fileRefs_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<SampleRunResultLog> getSampleRunResultLogs_1() {
		return this.sampleRunResultLogs_1;
	}

	public void setSampleRunResultLogs_1(Set<SampleRunResultLog> sampleRunResultLogs_1) {
		this.sampleRunResultLogs_1 = sampleRunResultLogs_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<SampleRunResult> getSampleRunResults() {
		return this.sampleRunResults;
	}

	public void setSampleRunResults(Set<SampleRunResult> sampleRunResults) {
		this.sampleRunResults = sampleRunResults;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<SampleRunLog> getSampleRunLogs_1() {
		return this.sampleRunLogs_1;
	}

	public void setSampleRunLogs_1(Set<SampleRunLog> sampleRunLogs_1) {
		this.sampleRunLogs_1 = sampleRunLogs_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<SampleRunResult> getSampleRunResults_1() {
		return this.sampleRunResults_1;
	}

	public void setSampleRunResults_1(Set<SampleRunResult> sampleRunResults_1) {
		this.sampleRunResults_1 = sampleRunResults_1;
	}

}
