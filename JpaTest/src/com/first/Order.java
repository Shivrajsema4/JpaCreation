package com.first;
// Generated 31 Aug, 2017 6:35:12 PM by Hibernate Tools 5.2.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "order", catalog = "osdashboard")
public class Order implements java.io.Serializable {

	private int id;
	private Patient patient;
	private Site site;
	private Date created;
	private Set<OrderTest> orderTests = new HashSet<OrderTest>(0);
	private Set<Sample> samples = new HashSet<Sample>(0);
	private Set<OrderTest> orderTests_1 = new HashSet<OrderTest>(0);
	private Set<Sample> samples_1 = new HashSet<Sample>(0);

	public Order() {
	}

	public Order(int id, Patient patient, Site site) {
		this.id = id;
		this.patient = patient;
		this.site = site;
	}

	public Order(int id, Patient patient, Site site, Date created, Set<OrderTest> orderTests, Set<Sample> samples,
			Set<OrderTest> orderTests_1, Set<Sample> samples_1) {
		this.id = id;
		this.patient = patient;
		this.site = site;
		this.created = created;
		this.orderTests = orderTests;
		this.samples = samples;
		this.orderTests_1 = orderTests_1;
		this.samples_1 = samples_1;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "patient_id", nullable = false)
	public Patient getPatient() {
		return this.patient;
	}

	public void setPatient(Patient patient) {
		this.patient = patient;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "site_id", nullable = false)
	public Site getSite() {
		return this.site;
	}

	public void setSite(Site site) {
		this.site = site;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<OrderTest> getOrderTests() {
		return this.orderTests;
	}

	public void setOrderTests(Set<OrderTest> orderTests) {
		this.orderTests = orderTests;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Sample> getSamples() {
		return this.samples;
	}

	public void setSamples(Set<Sample> samples) {
		this.samples = samples;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<OrderTest> getOrderTests_1() {
		return this.orderTests_1;
	}

	public void setOrderTests_1(Set<OrderTest> orderTests_1) {
		this.orderTests_1 = orderTests_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Sample> getSamples_1() {
		return this.samples_1;
	}

	public void setSamples_1(Set<Sample> samples_1) {
		this.samples_1 = samples_1;
	}

}
