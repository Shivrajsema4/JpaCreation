package com.first;
// Generated 31 Aug, 2017 6:35:12 PM by Hibernate Tools 5.2.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * FileRef generated by hbm2java
 */
@Entity
@Table(name = "file_ref", catalog = "osdashboard")
public class FileRef implements java.io.Serializable {

	private int id;
	private User user;
	private String fileName;
	private String type;
	private String url;
	private Date created;
	private Date lastModified;
	private Set<SampleRun> sampleRunsForVcfFileId = new HashSet<SampleRun>(0);
	private Set<FileRefLog> fileRefLogs = new HashSet<FileRefLog>(0);
	private Set<SampleRun> sampleRunsForBamFileId = new HashSet<SampleRun>(0);
	private Set<SampleRun> sampleRunsForTbiIndexFileId = new HashSet<SampleRun>(0);
	private Set<SampleRun> sampleRunsForTbiIndexFileId_1 = new HashSet<SampleRun>(0);
	private Set<FileRefLog> fileRefLogs_1 = new HashSet<FileRefLog>(0);
	private Set<SampleRun> sampleRunsForVcfFileId_1 = new HashSet<SampleRun>(0);
	private Set<SampleRun> sampleRunsForBamFileId_1 = new HashSet<SampleRun>(0);

	public FileRef() {
	}

	public FileRef(int id, User user) {
		this.id = id;
		this.user = user;
	}

	public FileRef(int id, User user, String fileName, String type, String url, Date created, Date lastModified,
			Set<SampleRun> sampleRunsForVcfFileId, Set<FileRefLog> fileRefLogs, Set<SampleRun> sampleRunsForBamFileId,
			Set<SampleRun> sampleRunsForTbiIndexFileId, Set<SampleRun> sampleRunsForTbiIndexFileId_1,
			Set<FileRefLog> fileRefLogs_1, Set<SampleRun> sampleRunsForVcfFileId_1,
			Set<SampleRun> sampleRunsForBamFileId_1) {
		this.id = id;
		this.user = user;
		this.fileName = fileName;
		this.type = type;
		this.url = url;
		this.created = created;
		this.lastModified = lastModified;
		this.sampleRunsForVcfFileId = sampleRunsForVcfFileId;
		this.fileRefLogs = fileRefLogs;
		this.sampleRunsForBamFileId = sampleRunsForBamFileId;
		this.sampleRunsForTbiIndexFileId = sampleRunsForTbiIndexFileId;
		this.sampleRunsForTbiIndexFileId_1 = sampleRunsForTbiIndexFileId_1;
		this.fileRefLogs_1 = fileRefLogs_1;
		this.sampleRunsForVcfFileId_1 = sampleRunsForVcfFileId_1;
		this.sampleRunsForBamFileId_1 = sampleRunsForBamFileId_1;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "modified_by", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "file_name", length = 45)
	public String getFileName() {
		return this.fileName;
	}

	public void setFileName(String fileName) {
		this.fileName = fileName;
	}

	@Column(name = "type", length = 45)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "url", length = 45)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_modified", length = 19)
	public Date getLastModified() {
		return this.lastModified;
	}

	public void setLastModified(Date lastModified) {
		this.lastModified = lastModified;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fileRefByVcfFileId")
	public Set<SampleRun> getSampleRunsForVcfFileId() {
		return this.sampleRunsForVcfFileId;
	}

	public void setSampleRunsForVcfFileId(Set<SampleRun> sampleRunsForVcfFileId) {
		this.sampleRunsForVcfFileId = sampleRunsForVcfFileId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fileRef")
	public Set<FileRefLog> getFileRefLogs() {
		return this.fileRefLogs;
	}

	public void setFileRefLogs(Set<FileRefLog> fileRefLogs) {
		this.fileRefLogs = fileRefLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fileRefByBamFileId")
	public Set<SampleRun> getSampleRunsForBamFileId() {
		return this.sampleRunsForBamFileId;
	}

	public void setSampleRunsForBamFileId(Set<SampleRun> sampleRunsForBamFileId) {
		this.sampleRunsForBamFileId = sampleRunsForBamFileId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fileRefByTbiIndexFileId")
	public Set<SampleRun> getSampleRunsForTbiIndexFileId() {
		return this.sampleRunsForTbiIndexFileId;
	}

	public void setSampleRunsForTbiIndexFileId(Set<SampleRun> sampleRunsForTbiIndexFileId) {
		this.sampleRunsForTbiIndexFileId = sampleRunsForTbiIndexFileId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fileRefByTbiIndexFileId")
	public Set<SampleRun> getSampleRunsForTbiIndexFileId_1() {
		return this.sampleRunsForTbiIndexFileId_1;
	}

	public void setSampleRunsForTbiIndexFileId_1(Set<SampleRun> sampleRunsForTbiIndexFileId_1) {
		this.sampleRunsForTbiIndexFileId_1 = sampleRunsForTbiIndexFileId_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fileRef")
	public Set<FileRefLog> getFileRefLogs_1() {
		return this.fileRefLogs_1;
	}

	public void setFileRefLogs_1(Set<FileRefLog> fileRefLogs_1) {
		this.fileRefLogs_1 = fileRefLogs_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fileRefByVcfFileId")
	public Set<SampleRun> getSampleRunsForVcfFileId_1() {
		return this.sampleRunsForVcfFileId_1;
	}

	public void setSampleRunsForVcfFileId_1(Set<SampleRun> sampleRunsForVcfFileId_1) {
		this.sampleRunsForVcfFileId_1 = sampleRunsForVcfFileId_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "fileRefByBamFileId")
	public Set<SampleRun> getSampleRunsForBamFileId_1() {
		return this.sampleRunsForBamFileId_1;
	}

	public void setSampleRunsForBamFileId_1(Set<SampleRun> sampleRunsForBamFileId_1) {
		this.sampleRunsForBamFileId_1 = sampleRunsForBamFileId_1;
	}

}
