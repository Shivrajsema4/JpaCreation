package com.first;
// Generated 31 Aug, 2017 6:35:12 PM by Hibernate Tools 5.2.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Run generated by hbm2java
 */
@Entity
@Table(name = "run", catalog = "osdashboard")
public class Run implements java.io.Serializable {

	private int id;
	private OrderTest orderTest;
	private RunCombination runCombination;
	private User user;
	private String name;
	private Date startTime;
	private Date endTime;
	private String qcStatus;
	private Integer numOfBarcodes;
	private String chipType;
	private String torrentSuiteUrl;
	private String comments;
	private Date created;
	private Date lastModified;
	private String sampleQcStatus;
	private Set<RunResult> runResults = new HashSet<RunResult>(0);
	private Set<SampleRun> sampleRuns = new HashSet<SampleRun>(0);
	private Set<RunLog> runLogs = new HashSet<RunLog>(0);
	private Set<RunLog> runLogs_1 = new HashSet<RunLog>(0);
	private Set<SampleRun> sampleRuns_1 = new HashSet<SampleRun>(0);
	private Set<RunResult> runResults_1 = new HashSet<RunResult>(0);

	public Run() {
	}

	public Run(int id, OrderTest orderTest, RunCombination runCombination, User user, String name, Date endTime) {
		this.id = id;
		this.orderTest = orderTest;
		this.runCombination = runCombination;
		this.user = user;
		this.name = name;
		this.endTime = endTime;
	}

	public Run(int id, OrderTest orderTest, RunCombination runCombination, User user, String name, Date startTime,
			Date endTime, String qcStatus, Integer numOfBarcodes, String chipType, String torrentSuiteUrl,
			String comments, Date created, Date lastModified, String sampleQcStatus, Set<RunResult> runResults,
			Set<SampleRun> sampleRuns, Set<RunLog> runLogs, Set<RunLog> runLogs_1, Set<SampleRun> sampleRuns_1,
			Set<RunResult> runResults_1) {
		this.id = id;
		this.orderTest = orderTest;
		this.runCombination = runCombination;
		this.user = user;
		this.name = name;
		this.startTime = startTime;
		this.endTime = endTime;
		this.qcStatus = qcStatus;
		this.numOfBarcodes = numOfBarcodes;
		this.chipType = chipType;
		this.torrentSuiteUrl = torrentSuiteUrl;
		this.comments = comments;
		this.created = created;
		this.lastModified = lastModified;
		this.sampleQcStatus = sampleQcStatus;
		this.runResults = runResults;
		this.sampleRuns = sampleRuns;
		this.runLogs = runLogs;
		this.runLogs_1 = runLogs_1;
		this.sampleRuns_1 = sampleRuns_1;
		this.runResults_1 = runResults_1;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_test_id", nullable = false)
	public OrderTest getOrderTest() {
		return this.orderTest;
	}

	public void setOrderTest(OrderTest orderTest) {
		this.orderTest = orderTest;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "run_combination_id", nullable = false)
	public RunCombination getRunCombination() {
		return this.runCombination;
	}

	public void setRunCombination(RunCombination runCombination) {
		this.runCombination = runCombination;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "modified_by", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_time", length = 19)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_time", nullable = false, length = 19)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "qc_status", length = 45)
	public String getQcStatus() {
		return this.qcStatus;
	}

	public void setQcStatus(String qcStatus) {
		this.qcStatus = qcStatus;
	}

	@Column(name = "num_of_barcodes")
	public Integer getNumOfBarcodes() {
		return this.numOfBarcodes;
	}

	public void setNumOfBarcodes(Integer numOfBarcodes) {
		this.numOfBarcodes = numOfBarcodes;
	}

	@Column(name = "chip_type", length = 45)
	public String getChipType() {
		return this.chipType;
	}

	public void setChipType(String chipType) {
		this.chipType = chipType;
	}

	@Column(name = "torrent_suite_url", length = 200)
	public String getTorrentSuiteUrl() {
		return this.torrentSuiteUrl;
	}

	public void setTorrentSuiteUrl(String torrentSuiteUrl) {
		this.torrentSuiteUrl = torrentSuiteUrl;
	}

	@Column(name = "comments", length = 65535)
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_modified", length = 19)
	public Date getLastModified() {
		return this.lastModified;
	}

	public void setLastModified(Date lastModified) {
		this.lastModified = lastModified;
	}

	@Column(name = "sample_qc_status", length = 45)
	public String getSampleQcStatus() {
		return this.sampleQcStatus;
	}

	public void setSampleQcStatus(String sampleQcStatus) {
		this.sampleQcStatus = sampleQcStatus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "run")
	public Set<RunResult> getRunResults() {
		return this.runResults;
	}

	public void setRunResults(Set<RunResult> runResults) {
		this.runResults = runResults;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "run")
	public Set<SampleRun> getSampleRuns() {
		return this.sampleRuns;
	}

	public void setSampleRuns(Set<SampleRun> sampleRuns) {
		this.sampleRuns = sampleRuns;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "run")
	public Set<RunLog> getRunLogs() {
		return this.runLogs;
	}

	public void setRunLogs(Set<RunLog> runLogs) {
		this.runLogs = runLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "run")
	public Set<RunLog> getRunLogs_1() {
		return this.runLogs_1;
	}

	public void setRunLogs_1(Set<RunLog> runLogs_1) {
		this.runLogs_1 = runLogs_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "run")
	public Set<SampleRun> getSampleRuns_1() {
		return this.sampleRuns_1;
	}

	public void setSampleRuns_1(Set<SampleRun> sampleRuns_1) {
		this.sampleRuns_1 = sampleRuns_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "run")
	public Set<RunResult> getRunResults_1() {
		return this.runResults_1;
	}

	public void setRunResults_1(Set<RunResult> runResults_1) {
		this.runResults_1 = runResults_1;
	}

}
