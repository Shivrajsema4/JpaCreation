package com.first;
// Generated 31 Aug, 2017 6:35:12 PM by Hibernate Tools 5.2.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * RunResult generated by hbm2java
 */
@Entity
@Table(name = "run_result", catalog = "osdashboard", uniqueConstraints = @UniqueConstraint(columnNames = { "run_id",
		"run_qc_parameter_id" }))
public class RunResult implements java.io.Serializable {

	private int id;
	private Run run;
	private RunQcParameter runQcParameter;
	private User user;
	private Float parameterActualValue;
	private String suggestedStatus;
	private String actualStatus;
	private String comments;
	private Date created;
	private Date lastModified;
	private Set<RunResultLog> runResultLogs = new HashSet<RunResultLog>(0);
	private Set<RunResultLog> runResultLogs_1 = new HashSet<RunResultLog>(0);

	public RunResult() {
	}

	public RunResult(int id, Run run, RunQcParameter runQcParameter, User user) {
		this.id = id;
		this.run = run;
		this.runQcParameter = runQcParameter;
		this.user = user;
	}

	public RunResult(int id, Run run, RunQcParameter runQcParameter, User user, Float parameterActualValue,
			String suggestedStatus, String actualStatus, String comments, Date created, Date lastModified,
			Set<RunResultLog> runResultLogs, Set<RunResultLog> runResultLogs_1) {
		this.id = id;
		this.run = run;
		this.runQcParameter = runQcParameter;
		this.user = user;
		this.parameterActualValue = parameterActualValue;
		this.suggestedStatus = suggestedStatus;
		this.actualStatus = actualStatus;
		this.comments = comments;
		this.created = created;
		this.lastModified = lastModified;
		this.runResultLogs = runResultLogs;
		this.runResultLogs_1 = runResultLogs_1;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "run_id", nullable = false)
	public Run getRun() {
		return this.run;
	}

	public void setRun(Run run) {
		this.run = run;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "run_qc_parameter_id", nullable = false)
	public RunQcParameter getRunQcParameter() {
		return this.runQcParameter;
	}

	public void setRunQcParameter(RunQcParameter runQcParameter) {
		this.runQcParameter = runQcParameter;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "modified_by", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "parameter_actual_value", precision = 12, scale = 0)
	public Float getParameterActualValue() {
		return this.parameterActualValue;
	}

	public void setParameterActualValue(Float parameterActualValue) {
		this.parameterActualValue = parameterActualValue;
	}

	@Column(name = "suggested_status", length = 45)
	public String getSuggestedStatus() {
		return this.suggestedStatus;
	}

	public void setSuggestedStatus(String suggestedStatus) {
		this.suggestedStatus = suggestedStatus;
	}

	@Column(name = "actual_status", length = 45)
	public String getActualStatus() {
		return this.actualStatus;
	}

	public void setActualStatus(String actualStatus) {
		this.actualStatus = actualStatus;
	}

	@Column(name = "comments", length = 65535)
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_modified", length = 19)
	public Date getLastModified() {
		return this.lastModified;
	}

	public void setLastModified(Date lastModified) {
		this.lastModified = lastModified;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "runResult")
	public Set<RunResultLog> getRunResultLogs() {
		return this.runResultLogs;
	}

	public void setRunResultLogs(Set<RunResultLog> runResultLogs) {
		this.runResultLogs = runResultLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "runResult")
	public Set<RunResultLog> getRunResultLogs_1() {
		return this.runResultLogs_1;
	}

	public void setRunResultLogs_1(Set<RunResultLog> runResultLogs_1) {
		this.runResultLogs_1 = runResultLogs_1;
	}

}
