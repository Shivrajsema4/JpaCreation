package com.sema4genomics.os.dashboard.entity2;
// Generated 23 Aug, 2017 11:44:23 AM by Hibernate Tools 5.0.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Run generated by hbm2java
 */
@Entity
@Table(name = "run", catalog = "gong")
public class Run implements java.io.Serializable {

	private Integer id;
	private Instrument instrument;
	private OrderTest orderTest;
	private User user;
	private String name;
	private Date startTime;
	private Date endTime;
	private String qcStatus;
	private Integer numOfBarcodes;
	private String chipType;
	private String torrentSuiteUrl;
	private String comments;
	private Date created;
	private Date lastModified;
	private String sampleQcStatus;
	private Set<RunResult> runResults = new HashSet<RunResult>(0);
	private Set<RunLog> runLogs = new HashSet<RunLog>(0);
	private Set<SampleRun> sampleRuns = new HashSet<SampleRun>(0);

	public Run() {
	}

	public Run(Instrument instrument, OrderTest orderTest, User user, String name, Date endTime) {
		this.instrument = instrument;
		this.orderTest = orderTest;
		this.user = user;
		this.name = name;
		this.endTime = endTime;
	}

	public Run(Instrument instrument, OrderTest orderTest, User user, String name, Date startTime, Date endTime,
			String qcStatus, Integer numOfBarcodes, String chipType, String torrentSuiteUrl, String comments,
			Date created, Date lastModified, String sampleQcStatus, Set<RunResult> runResults, Set<RunLog> runLogs,
			Set<SampleRun> sampleRuns) {
		this.instrument = instrument;
		this.orderTest = orderTest;
		this.user = user;
		this.name = name;
		this.startTime = startTime;
		this.endTime = endTime;
		this.qcStatus = qcStatus;
		this.numOfBarcodes = numOfBarcodes;
		this.chipType = chipType;
		this.torrentSuiteUrl = torrentSuiteUrl;
		this.comments = comments;
		this.created = created;
		this.lastModified = lastModified;
		this.sampleQcStatus = sampleQcStatus;
		this.runResults = runResults;
		this.runLogs = runLogs;
		this.sampleRuns = sampleRuns;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "instrument_id", nullable = false)
	public Instrument getInstrument() {
		return this.instrument;
	}

	public void setInstrument(Instrument instrument) {
		this.instrument = instrument;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_test_id", nullable = false)
	public OrderTest getOrderTest() {
		return this.orderTest;
	}

	public void setOrderTest(OrderTest orderTest) {
		this.orderTest = orderTest;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "modified_by", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "name", nullable = false, length = 45)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "start_time", length = 19)
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "end_time", nullable = false, length = 19)
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "qc_status", length = 45)
	public String getQcStatus() {
		return this.qcStatus;
	}

	public void setQcStatus(String qcStatus) {
		this.qcStatus = qcStatus;
	}

	@Column(name = "num_of_barcodes")
	public Integer getNumOfBarcodes() {
		return this.numOfBarcodes;
	}

	public void setNumOfBarcodes(Integer numOfBarcodes) {
		this.numOfBarcodes = numOfBarcodes;
	}

	@Column(name = "chip_type", length = 45)
	public String getChipType() {
		return this.chipType;
	}

	public void setChipType(String chipType) {
		this.chipType = chipType;
	}

	@Column(name = "torrent_suite_url", length = 200)
	public String getTorrentSuiteUrl() {
		return this.torrentSuiteUrl;
	}

	public void setTorrentSuiteUrl(String torrentSuiteUrl) {
		this.torrentSuiteUrl = torrentSuiteUrl;
	}

	@Column(name = "comments", length = 65535)
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_modified", length = 19)
	public Date getLastModified() {
		return this.lastModified;
	}

	public void setLastModified(Date lastModified) {
		this.lastModified = lastModified;
	}

	@Column(name = "sample_qc_status", length = 45)
	public String getSampleQcStatus() {
		return this.sampleQcStatus;
	}

	public void setSampleQcStatus(String sampleQcStatus) {
		this.sampleQcStatus = sampleQcStatus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "run")
	public Set<RunResult> getRunResults() {
		return this.runResults;
	}

	public void setRunResults(Set<RunResult> runResults) {
		this.runResults = runResults;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "run")
	public Set<RunLog> getRunLogs() {
		return this.runLogs;
	}

	public void setRunLogs(Set<RunLog> runLogs) {
		this.runLogs = runLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "run")
	public Set<SampleRun> getSampleRuns() {
		return this.sampleRuns;
	}

	public void setSampleRuns(Set<SampleRun> sampleRuns) {
		this.sampleRuns = sampleRuns;
	}

}
