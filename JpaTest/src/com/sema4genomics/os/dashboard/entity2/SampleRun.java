package com.sema4genomics.os.dashboard.entity2;
// Generated 23 Aug, 2017 11:44:23 AM by Hibernate Tools 5.0.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SampleRun generated by hbm2java
 */
@Entity
@Table(name = "sample_run", catalog = "gong")
public class SampleRun implements java.io.Serializable {

	private Integer id;
	private FileRef fileRefByTbiIndexFileId;
	private FileRef fileRefByVcfFileId;
	private FileRef fileRefByBamFileId;
	private Run run;
	private Sample sample;
	private User user;
	private String sampleQcUrl;
	private String sampleVariantsUrl;
	private Date created;
	private Date lastModified;
	private Set<SampleRunLog> sampleRunLogs = new HashSet<SampleRunLog>(0);
	private Set<SampleRunQc> sampleRunQcs = new HashSet<SampleRunQc>(0);
	private Set<BenchAnalysis> benchAnalysises = new HashSet<BenchAnalysis>(0);
	private Set<SampleRunVariants> sampleRunVariantses = new HashSet<SampleRunVariants>(0);

	public SampleRun() {
	}

	public SampleRun(FileRef fileRefByTbiIndexFileId, FileRef fileRefByVcfFileId, FileRef fileRefByBamFileId, Run run,
			Sample sample, User user) {
		this.fileRefByTbiIndexFileId = fileRefByTbiIndexFileId;
		this.fileRefByVcfFileId = fileRefByVcfFileId;
		this.fileRefByBamFileId = fileRefByBamFileId;
		this.run = run;
		this.sample = sample;
		this.user = user;
	}

	public SampleRun(FileRef fileRefByTbiIndexFileId, FileRef fileRefByVcfFileId, FileRef fileRefByBamFileId, Run run,
			Sample sample, User user, String sampleQcUrl, String sampleVariantsUrl, Date created, Date lastModified,
			Set<SampleRunLog> sampleRunLogs, Set<SampleRunQc> sampleRunQcs, Set<BenchAnalysis> benchAnalysises,
			Set<SampleRunVariants> sampleRunVariantses) {
		this.fileRefByTbiIndexFileId = fileRefByTbiIndexFileId;
		this.fileRefByVcfFileId = fileRefByVcfFileId;
		this.fileRefByBamFileId = fileRefByBamFileId;
		this.run = run;
		this.sample = sample;
		this.user = user;
		this.sampleQcUrl = sampleQcUrl;
		this.sampleVariantsUrl = sampleVariantsUrl;
		this.created = created;
		this.lastModified = lastModified;
		this.sampleRunLogs = sampleRunLogs;
		this.sampleRunQcs = sampleRunQcs;
		this.benchAnalysises = benchAnalysises;
		this.sampleRunVariantses = sampleRunVariantses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tbi_index_file_id", nullable = false)
	public FileRef getFileRefByTbiIndexFileId() {
		return this.fileRefByTbiIndexFileId;
	}

	public void setFileRefByTbiIndexFileId(FileRef fileRefByTbiIndexFileId) {
		this.fileRefByTbiIndexFileId = fileRefByTbiIndexFileId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "vcf_file_id", nullable = false)
	public FileRef getFileRefByVcfFileId() {
		return this.fileRefByVcfFileId;
	}

	public void setFileRefByVcfFileId(FileRef fileRefByVcfFileId) {
		this.fileRefByVcfFileId = fileRefByVcfFileId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "bam_file_id", nullable = false)
	public FileRef getFileRefByBamFileId() {
		return this.fileRefByBamFileId;
	}

	public void setFileRefByBamFileId(FileRef fileRefByBamFileId) {
		this.fileRefByBamFileId = fileRefByBamFileId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "run_id", nullable = false)
	public Run getRun() {
		return this.run;
	}

	public void setRun(Run run) {
		this.run = run;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sample_id", nullable = false)
	public Sample getSample() {
		return this.sample;
	}

	public void setSample(Sample sample) {
		this.sample = sample;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "modified_by", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "sample_qc_url", length = 200)
	public String getSampleQcUrl() {
		return this.sampleQcUrl;
	}

	public void setSampleQcUrl(String sampleQcUrl) {
		this.sampleQcUrl = sampleQcUrl;
	}

	@Column(name = "sample_variants_url", length = 100)
	public String getSampleVariantsUrl() {
		return this.sampleVariantsUrl;
	}

	public void setSampleVariantsUrl(String sampleVariantsUrl) {
		this.sampleVariantsUrl = sampleVariantsUrl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_modified", length = 19)
	public Date getLastModified() {
		return this.lastModified;
	}

	public void setLastModified(Date lastModified) {
		this.lastModified = lastModified;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sampleRun")
	public Set<SampleRunLog> getSampleRunLogs() {
		return this.sampleRunLogs;
	}

	public void setSampleRunLogs(Set<SampleRunLog> sampleRunLogs) {
		this.sampleRunLogs = sampleRunLogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sampleRun")
	public Set<SampleRunQc> getSampleRunQcs() {
		return this.sampleRunQcs;
	}

	public void setSampleRunQcs(Set<SampleRunQc> sampleRunQcs) {
		this.sampleRunQcs = sampleRunQcs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sampleRun")
	public Set<BenchAnalysis> getBenchAnalysises() {
		return this.benchAnalysises;
	}

	public void setBenchAnalysises(Set<BenchAnalysis> benchAnalysises) {
		this.benchAnalysises = benchAnalysises;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sampleRun")
	public Set<SampleRunVariants> getSampleRunVariantses() {
		return this.sampleRunVariantses;
	}

	public void setSampleRunVariantses(Set<SampleRunVariants> sampleRunVariantses) {
		this.sampleRunVariantses = sampleRunVariantses;
	}

}
