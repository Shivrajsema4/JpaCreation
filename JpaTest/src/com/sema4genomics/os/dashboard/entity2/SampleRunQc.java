package com.sema4genomics.os.dashboard.entity2;
// Generated 23 Aug, 2017 11:44:23 AM by Hibernate Tools 5.0.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SampleRunQc generated by hbm2java
 */
@Entity
@Table(name = "sample_run_qc", catalog = "gong")
public class SampleRunQc implements java.io.Serializable {

	private Integer sampleRunQcId;
	private SampleRun sampleRun;
	private Target target;
	private User user;
	private Integer exons;
	private String details;
	private Integer meanDepth;
	private Date created;
	private Date lastModified;
	private Set<SampleRunQcLog> sampleRunQcLogs = new HashSet<SampleRunQcLog>(0);

	public SampleRunQc() {
	}

	public SampleRunQc(SampleRun sampleRun, Target target, User user) {
		this.sampleRun = sampleRun;
		this.target = target;
		this.user = user;
	}

	public SampleRunQc(SampleRun sampleRun, Target target, User user, Integer exons, String details, Integer meanDepth,
			Date created, Date lastModified, Set<SampleRunQcLog> sampleRunQcLogs) {
		this.sampleRun = sampleRun;
		this.target = target;
		this.user = user;
		this.exons = exons;
		this.details = details;
		this.meanDepth = meanDepth;
		this.created = created;
		this.lastModified = lastModified;
		this.sampleRunQcLogs = sampleRunQcLogs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "sample_run_qc_id", unique = true, nullable = false)
	public Integer getSampleRunQcId() {
		return this.sampleRunQcId;
	}

	public void setSampleRunQcId(Integer sampleRunQcId) {
		this.sampleRunQcId = sampleRunQcId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sample_run_id", nullable = false)
	public SampleRun getSampleRun() {
		return this.sampleRun;
	}

	public void setSampleRun(SampleRun sampleRun) {
		this.sampleRun = sampleRun;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "target_id", nullable = false)
	public Target getTarget() {
		return this.target;
	}

	public void setTarget(Target target) {
		this.target = target;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "modified_by", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "exons")
	public Integer getExons() {
		return this.exons;
	}

	public void setExons(Integer exons) {
		this.exons = exons;
	}

	@Column(name = "details", length = 200)
	public String getDetails() {
		return this.details;
	}

	public void setDetails(String details) {
		this.details = details;
	}

	@Column(name = "mean_depth")
	public Integer getMeanDepth() {
		return this.meanDepth;
	}

	public void setMeanDepth(Integer meanDepth) {
		this.meanDepth = meanDepth;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_modified", length = 19)
	public Date getLastModified() {
		return this.lastModified;
	}

	public void setLastModified(Date lastModified) {
		this.lastModified = lastModified;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sampleRunQc")
	public Set<SampleRunQcLog> getSampleRunQcLogs() {
		return this.sampleRunQcLogs;
	}

	public void setSampleRunQcLogs(Set<SampleRunQcLog> sampleRunQcLogs) {
		this.sampleRunQcLogs = sampleRunQcLogs;
	}

}
